{"version":3,"sources":["components/CategoryCard.js","sanity.js","components/Categories.js","components/RestaurantCard.js","components/FeaturedRow.js","screens/HomeScreen.js","features/basketSlice.js","components/DishRow.js","components/BasketIcon.js","features/restaurantSlice.js","screens/RestaurantScreen.js","store.js","screens/BasketScreen.js","screens/PreparingOrderScreen.js","screens/DeliveryScreen.js","App.js","assets/orderLoading.gif","assets/bike.gif"],"names":["CategoryCard","imgUrl","title","className","source","uri","client","sanityClient","projectId","dataset","useCdn","apiVersion","builder","ImageUrlBuilder","urlFor","image","Categories","useState","categories","setCategories","useEffect","fetch","then","data","console","log","ScrollView","contentContainerStyle","paddingHorizontal","paddingTop","horizontal","showsHorizontalScrollIndicators","map","category","width","url","name","_id","RestaurantCard","id","rating","genre","address","short_description","dishes","long","lat","navigation","useNavigation","onPress","navigate","style","maxWidth","numberOfLines","color","opacity","size","FeaturedRow","description","restaurants","setRestaurants","View","showsHorizontalScrollIndicator","restaurant","type","HomeScreen","featuredCategories","setFeaturedCategories","useLayoutEffect","setOptions","headerShown","TextInput","placeholder","keyboardType","paddingBottom","basketSlice","createSlice","initialState","items","reducers","addToBasket","state","action","payload","removeFromBasket","index","findIndex","item","newBasket","splice","warn","clearBasket","actions","selectBasketItems","basket","selectBasketTotal","reduce","total","price","DishRow","isPressed","setIsPressed","useSelector","filter","selectBasketItemsWithId","dispatch","useDispatch","quantity","currency","borderWidth","borderColor","TouchableOpacity","disabled","length","Text","BasketIcon","basketTotal","restaurantSlice","imgrl","setRestaurant","selectRestaurant","RestaurantScreen","useRoute","params","goBack","dish","store","configureStore","reducer","basketReducer","restaurantReducer","BasketScreen","groupedItemsInBasket","setGroupedItemsInBasket","groupedItems","results","push","height","Object","entries","key","PreparingOrderScreen","setTimeout","require","animation","iterationCount","indeterminate","DeliveryScreen","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","options","presentation","module","exports"],"mappings":"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","file":"static/js/app.bd580cae.chunk.js","sourcesContent":["import { View, Text, TouchableOpacity, Image } from 'react-native'\r\nimport React from 'react'\r\n\r\nconst CategoryCard = ({ imgUrl, title }) => {\r\n  return (\r\n    <TouchableOpacity className=\"relative mr-2\">\r\n        <Image\r\n            source={{\r\n                uri: imgUrl,\r\n            }}\r\n            className=\"h-20 w-20 rounded\"\r\n        />\r\n      <Text className=\"absolute bottom-1 left-1 text-white font-bold px-1.5 rounded-full bg-gray-700\">{title}</Text>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nexport default CategoryCard","import sanityClient from \"@sanity/client\"\r\nimport ImageUrlBuilder from \"@sanity/image-url\"\r\n\r\nconst client = sanityClient({\r\n    projectId: \"3khzwvq3\",\r\n    dataset: \"production\",\r\n    useCdn: true,\r\n    apiVersion: \"2021-10-21\",\r\n}) \r\n\r\nconst builder = ImageUrlBuilder(client)\r\nexport const urlFor = (source) => builder.image(source)\r\n\r\n// RUN THIS to add exception for localhost: 3000 CORS policy\r\n// sanity cors add http://localhost:3000\r\n\r\nexport default client","import { View, Text, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport CategoryCard from './CategoryCard'\r\nimport sanityClient, { urlFor } from '../sanity'\r\n\r\nconst Categories = () => {\r\n  const [categories, setCategories] = useState([])\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `\r\n        *[_type == \"category\"]\r\n          \r\n        `).then((data) => {\r\n        setCategories(data)\r\n      })\r\n  }, [])\r\n\r\n   console.log(categories)\r\n\r\n  return (\r\n    <ScrollView \r\n        contentContainerStyle={{\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n        }}\r\n        horizontal\r\n        showsHorizontalScrollIndicators={false}\r\n    >\r\n    \r\n        {categories.map((category) => (\r\n          <CategoryCard\r\n            key={category._id}\r\n            imgUrl={urlFor(category.image).width(200).url()}\r\n            title={category.name}\r\n          />\r\n        ))}\r\n        \r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default Categories","import { View, Text, TouchableOpacity, Image } from 'react-native'\r\nimport React from 'react'\r\nimport { StarIcon } from 'react-native-heroicons/solid'\r\nimport { LocationMarkerIcon } from 'react-native-heroicons/outline'\r\nimport { urlFor } from '../sanity'\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\nconst RestaurantCard = ({\r\n    id,\r\n    imgUrl,\r\n    title,\r\n    rating,\r\n    genre,\r\n    address,\r\n    short_description,\r\n    dishes,\r\n    long,\r\n    lat,\r\n  }) => {\r\n    const navigation = useNavigation()\r\n\r\n  return (\r\n    <TouchableOpacity\r\n    onPress={() => {\r\n      navigation.navigate(\"Restaurant\", {\r\n        id,\r\n        imgUrl,\r\n        title,\r\n        rating,\r\n        genre,\r\n        address,\r\n        short_description,\r\n        dishes,\r\n        long,\r\n        lat,\r\n      })\r\n    }} \r\n    className=\"bg-white mr-3 shadow-sm\">\r\n      <Image\r\n        source={{\r\n            uri: urlFor(imgUrl).url(),\r\n        }}\r\n        className=\"h-36 w-64 rounded-sm\"\r\n      />\r\n      <View className=\"px-3 pb-4\">\r\n        <Text style={{ maxWidth: 200}} numberOfLines={1} className=\"font-bold text-lg pt-2\">{title}</Text>\r\n        <View className=\"flex-row items-center space-x-1\">\r\n            <StarIcon color=\"green\" opacity={0.5} size={22} />\r\n            <Text className=\"text-xs text-gray-500\">\r\n                <Text className=\"text-green-500\">{rating}</Text> · {genre}\r\n            </Text>\r\n        </View>\r\n\r\n        <View className=\"flex-row items-center space-x-1\">\r\n          <LocationMarkerIcon color='gray' opacity={0.4} size={22} />\r\n          <Text style={{ maxWidth: 180}} numberOfLines={1} className=\"text-xs text-gray-500\">Nearby · {address}</Text>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nexport default RestaurantCard","import { View, Text, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ArrowRightIcon } from 'react-native-heroicons/outline'\r\nimport RestaurantCard from './RestaurantCard'\r\nimport sanityClient from '../sanity'\r\n\r\n\r\nconst FeaturedRow = ({ id, title, description }) => {\r\n  const [restaurants, setRestaurants] = useState([])\r\n  \r\n  useEffect(() => {\r\n    sanityClient.fetch(`\r\n    *[_type == \"featured\" && _id == $id]{\r\n      ...,\r\n      restaurants[]->{\r\n        ...,\r\n        dishes[]->,\r\n        type-> {\r\n          name\r\n        }\r\n       },\r\n      }[0]\r\n    `, \r\n    { id }\r\n    ).then(data => {\r\n      setRestaurants(data?.restaurants)\r\n    })   \r\n  }, [id])\r\n\r\n// console.log(restaurants)\r\n\r\n  return (\r\n    <View>\r\n      <View className=\"mt-4 flex-row items-center justify-between px-4\">\r\n        <Text className=\"font-bold text-lg\">{title}</Text>\r\n        <ArrowRightIcon color=\"#00CCBB\" />\r\n      </View>\r\n\r\n      <Text className=\"text-xs text-gray-500 px-4\">{description}</Text>\r\n\r\n      <ScrollView\r\n        horizontal\r\n        contentContainerStyle={{\r\n          paddingHorizontal: 15,\r\n        }}\r\n        showsHorizontalScrollIndicator={false}\r\n        className=\"pt-4\"\r\n      >\r\n\r\n        {restaurants?.map(restaurant => (\r\n          <RestaurantCard \r\n            key={restaurant._id}\r\n            id={restaurant._id}\r\n            imgUrl={restaurant.image}\r\n            title={restaurant.name}\r\n            rating={restaurant.rating}\r\n            genre={restaurant.type?.name}\r\n            address={restaurant.address}\r\n            short_description={restaurant.short_description}\r\n            dishes={restaurant.dishes}\r\n            long={restaurant.long}\r\n            lat={restaurant.lat}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default FeaturedRow","import { View, Text, SafeAreaView, Image, ScrollView, TextInput } from 'react-native'\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { \r\n  UserIcon,\r\n  ChevronDownIcon,\r\n  SearchIcon,\r\n  AdjustmentsIcon,\r\n } from \"react-native-heroicons/outline\";\r\nimport Categories from '../components/Categories';\r\nimport FeaturedRow from '../components/FeaturedRow';\r\nimport sanityClient from '../sanity'\r\n\r\nconst HomeScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [featuredCategories, setFeaturedCategories] = useState([])\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerShown: false,\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    sanityClient.fetch(`*[_type == \"featured\"]{\r\n      ...,\r\n      restaurants[]->{\r\n        ...,\r\n        dishes[]->\r\n       }\r\n      }`).then((data) => {\r\n      setFeaturedCategories(data)\r\n    })\r\n  }, [])\r\n  \r\n  // console.log(featuredCategories)\r\n\r\n  return (\r\n    <SafeAreaView className=\"bg-white pt-5\">\r\n\r\n      {/* header */}\r\n        <View className='flex-row pb-3 items-center mx-4 space-x-2'>\r\n          <Image\r\n            source={{\r\n              uri: 'https://links.papareact.com/wru',\r\n            }}\r\n            className='h-7 w-7 bg-gray-300 p-4 rounded-full'\r\n          />\r\n\r\n          <View className='flex-1'>\r\n              <Text className='font-bold text-gray-400 text-xs'>\r\n                Deliver Now\r\n              </Text>\r\n              <View className='flex-row items-center'>\r\n                <Text className=\"font-bold text-xl\">Current Location</Text>\r\n                <ChevronDownIcon size={16} color='#00CCBB' width={20} />\r\n              </View>\r\n          </View>\r\n\r\n          <UserIcon size={35} color='#00CCBB' />\r\n\r\n        </View>\r\n\r\n      {/* Search */}\r\n        <View className=\"flex-row items-center space-x-2 pb-2 mx-4\">\r\n          <View className=\"flex-row space-x-2 flex-1 bg-gray-200 p-3\">\r\n            <SearchIcon color=\"gray\" size={20} />\r\n            <TextInput\r\n              placeholder=\"Restaurants and cuisines\"\r\n              keyboardType=\"default\"\r\n            />\r\n          </View>\r\n\r\n          <AdjustmentsIcon color=\"#00CCBB\" />\r\n        </View>\r\n\r\n      {/* body */}\r\n        <ScrollView \r\n          className=\"bg-gray-100\"\r\n          contentContainerStyle={{\r\n            paddingBottom: 100,\r\n          }}  \r\n        >\r\n          {/* categories */}\r\n          <Categories />\r\n\r\n          {/* feature rows */}\r\n          {/* featured */}\r\n          {featuredCategories?.map((category) => (\r\n            <FeaturedRow \r\n              key={category._id}\r\n              id={category._id}\r\n              title={category.name}\r\n              description={category.short_description}\r\n            />\r\n          ))}\r\n        </ScrollView>    \r\n\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  items: [],\r\n}\r\n\r\nexport const basketSlice = createSlice({\r\nname: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    addToBasket: (state, action) => {\r\n      state.items = [...state.items, action.payload]\r\n    },\r\n\r\n    removeFromBasket: (state, action) => {\r\n      const index = state.items.findIndex((item) => item.id === action.payload.id)\r\n\r\n      let newBasket = [...state.items]\r\n\r\n      if(index >= 0){\r\n        newBasket.splice(index, 1)\r\n      } else {\r\n        console.warn(\r\n            `Product (id: ${action.payload.id}) not in basket`\r\n        )\r\n      }\r\n      state.items = newBasket\r\n    },\r\n\r\n    clearBasket: (state) => {\r\n      let newBasket = []\r\n      state.items = newBasket\r\n    }\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addToBasket, removeFromBasket, clearBasket } = basketSlice.actions\r\n\r\nexport const selectBasketItems = (state) => state.basket.items\r\n\r\nexport const selectBasketItemsWithId = (state, id) =>\r\n    state.basket.items.filter((item) => item.id === id)\r\n\r\nexport const selectBasketTotal = (state) => state.basket.items.reduce((total, item) =>\r\n  total += item.price, 0)\r\n\r\nexport default basketSlice.reducer","import { View, Text, TouchableOpacity, Image } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport Currency from \"react-currency-formatter\"\r\nimport { urlFor } from '../sanity'\r\nimport { MinusCircleIcon, PlusCircleIcon } from \"react-native-heroicons/solid\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { \r\n    addToBasket,\r\n    removeFromBasket, \r\n    selectBasketItems, \r\n    selectBasketItemsWithId } from '../features/basketSlice'\r\n\r\nconst DishRow = ({ id, name, description, price, image }) => {\r\n    const [isPressed, setIsPressed] = useState(false)\r\n    const items = useSelector((state) => selectBasketItemsWithId(state, id))\r\n    const dispatch = useDispatch()\r\n\r\n    const addItemToBasket = () => {\r\n        dispatch(addToBasket({ id, name, description, price, image }))\r\n    }\r\n\r\n    const removeItemFromBasket = () => {\r\n        if(!items.length > 0) return\r\n\r\n        dispatch(removeFromBasket({ id }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <TouchableOpacity \r\n            onPress={() => setIsPressed(!isPressed)}\r\n            className={`bg-white border p-4 border-gray-200 \r\n                ${isPressed && \"border-b-0\"\r\n            }`}\r\n        >\r\n            <View className=\"flex-row\">\r\n                <View className=\"flex-1 pr-2\">\r\n                    <Text className=\"text-lg mb-1\">{name}</Text>\r\n                    <Text className=\"text-gray-400\">{description}</Text>\r\n                    <Text className=\"to-gray-400 mt-2\">\r\n                        <Currency quantity={price} currency=\"GBP\" />\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    <Image\r\n                        style={{\r\n                            borderWidth: 1,\r\n                            borderColor: \"#f3f3f4\",\r\n                        }}\r\n                        source={{ uri: urlFor(image).url() }}\r\n                        className=\"h-20 w-20 bg-gray-300 p-4\"\r\n                        />\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n\r\n        {isPressed && (\r\n            <View className=\"bg-white px-4 py-1\">\r\n                <View className=\"flex-row items-center space-x-2\">\r\n                    <TouchableOpacity \r\n                        disabled={!items.length}\r\n                        onPress={removeItemFromBasket}>\r\n                        <MinusCircleIcon \r\n                            color={items.length > 0 ? \"#00CCBB\" : 'gray'}  \r\n                            size={40}\r\n                        />\r\n                    </TouchableOpacity>\r\n\r\n                    <Text>{items.length}</Text>\r\n\r\n                    <TouchableOpacity onPress={addItemToBasket}>\r\n                        <PlusCircleIcon \r\n                            color=\"#00CCBB\"  \r\n                            size={40}\r\n                            />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DishRow","import { View, Text, TouchableOpacity } from 'react-native'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectBasketItems, selectBasketTotal } from '../features/basketSlice'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport Currency from \"react-currency-formatter\"\r\n\r\nconst BasketIcon = () => {\r\n    const items = useSelector(selectBasketItems)\r\n    const navigation = useNavigation()\r\n    const basketTotal = useSelector(selectBasketTotal)\r\n\r\n    if(items.length === 0) return null\r\n\r\n  return (\r\n    <View className=\"absolute bottom-10 w-full z-50\">\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"Basket\")} \r\n            className=\"mx-5 bg-[#00CCBB] p-4 rounded-lg flex-row\r\n            items-center space-x-2\">\r\n            <Text className=\"text-white font-extrabold text-lg bg-[#01A296] py-1 px-2\">\r\n                {items.length}\r\n            </Text>\r\n            <Text className=\"flex-1 text-white font-extrabold text-lg text-center\">\r\n                View Basket\r\n            </Text>\r\n            <Text className=\"text-lg text-white font-extrabold\">\r\n                <Currency quantity={basketTotal} currency=\"GBP\" />\r\n            </Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BasketIcon","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  restaurant: {\r\n    id: null,\r\n    imgrl: null,\r\n    title: null,\r\n    rating: null,\r\n    genre: null,\r\n    address: null,\r\n    short_description: null,\r\n    dishes: null,\r\n  },\r\n}\r\n\r\nexport const restaurantSlice = createSlice({\r\nname: 'restaurant',\r\n  initialState,\r\n  reducers: {\r\n    setRestaurant: (state, action) => {\r\n        state.restaurant = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setRestaurant } = restaurantSlice.actions\r\n\r\nexport const selectRestaurant = (state) => state.restaurant.restaurant\r\n\r\nexport default restaurantSlice.reducer","import { View, Image, Text, TouchableOpacity } from 'react-native'\r\nimport React, { useEffect, useLayoutEffect } from 'react'\r\nimport { useNavigation, useRoute } from '@react-navigation/native'\r\nimport { ScrollView } from 'react-native-web'\r\nimport { urlFor } from '../sanity'\r\nimport { \r\n  ArrowLeftIcon,\r\n  ChevronRightIcon,\r\n  LocationMarkerIcon,\r\n  StarIcon \r\n} from 'react-native-heroicons/solid'\r\nimport { QuestionMarkCircleIcon } from \"react-native-heroicons/outline\" \r\nimport DishRow from '../components/DishRow'\r\nimport BasketIcon from '../components/BasketIcon'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setRestaurant } from '../features/restaurantSlice'\r\n\r\nconst RestaurantScreen = () => {\r\n  const navigation = useNavigation()\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    params: {\r\n      id,\r\n      imgUrl,\r\n      title,\r\n      rating,\r\n      genre,\r\n      address,\r\n      short_description,\r\n      dishes,\r\n      long,\r\n      lat,\r\n    }\r\n  } = useRoute()\r\n\r\n  useEffect(() => {\r\n    dispatch(setRestaurant({\r\n      id,\r\n      imgUrl,\r\n      title,\r\n      rating,\r\n      genre,\r\n      address,\r\n      short_description,\r\n      dishes,\r\n      long,\r\n      lat,\r\n    }))\r\n  }, [dispatch])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerShown: false,\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n    <>\r\n      <BasketIcon />\r\n      \r\n      <ScrollView>\r\n        <View className=\"relative\">\r\n          <Image \r\n            source={{\r\n              uri: urlFor(imgUrl).url(),\r\n            }}\r\n            className=\"w-full h-56 bg-gray-300 p-4\"\r\n          />\r\n          <TouchableOpacity\r\n            onPress={navigation.goBack}\r\n            className=\"absolute top-14 left-5 p-2 bg-gray-100 rounded-full\">\r\n            <ArrowLeftIcon size={20} color=\"#00CCBB\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className=\"bg-white\">\r\n          <View className=\"px-4 pt-4\">\r\n            <Text className=\"text-3xl font-bold\">{title}</Text>\r\n            <View className=\"flex-row space-x-2 my-1\">\r\n              \r\n              <View className=\"flex-row items-center space-x-1\">\r\n                <StarIcon color='green' opacity={0.5} size={22} />\r\n                <Text className=\"text-xs text-gray-500\">\r\n                  <Text className=\"text-green-500\">{rating}</Text> · {genre}\r\n                </Text>\r\n              </View>\r\n\r\n              <View className=\"flex-row items-center space-x-1\">\r\n                <LocationMarkerIcon color='gray' opacity={0.4} size={22} />\r\n                <Text className=\"text-xs text-gray-500\">Nearby · {address}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <Text className=\"text-gray-500 mt-2 pb-4\">{short_description}</Text>\r\n          </View>\r\n\r\n          <TouchableOpacity className=\"flex-row items-center space-x-2 p-4 border-y\r\n            border-gray-300\">\r\n            <QuestionMarkCircleIcon color=\"gray\" opacity={0.6} size={20} />\r\n            <Text className=\"pl-2 flex-1 text-md font-bold\">\r\n              Have a food allergy?\r\n            </Text>\r\n            <ChevronRightIcon color=\"#00CCBB\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className=\"pb-36\">\r\n          <Text className=\"px-4 pt-6 mb-3 font-bold text-xl\">Menu</Text>\r\n          \r\n          {/* Dish Row */}\r\n          {dishes.map((dish) => (\r\n            <DishRow\r\n            key={dish._id}\r\n            id={dish._id}\r\n            name={dish.name}\r\n            description={dish.short_description}\r\n            price={dish.price}\r\n            image={dish.image}\r\n            />\r\n            ))}\r\n        </View>\r\n\r\n      </ScrollView>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RestaurantScreen","import { configureStore } from '@reduxjs/toolkit'\r\nimport basketReducer from './features/basketSlice'\r\nimport restaurantReducer from './features/restaurantSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    basket: basketReducer,\r\n    restaurant: restaurantReducer,\r\n  },\r\n})","import { View, Image, Text, SafeAreaView, TouchableOpacity, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectRestaurant } from '../features/restaurantSlice'\r\nimport { selectBasketItems, removeFromBasket, selectBasketTotal } from '../features/basketSlice'\r\nimport { XCircleIcon } from 'react-native-heroicons/solid'\r\nimport { urlFor } from '../sanity'\r\nimport Currency from \"react-currency-formatter\"\r\n\r\nconst BasketScreen = () => {\r\n  const [groupedItemsInBasket, setGroupedItemsInBasket] = useState([])\r\n  const navigation = useNavigation()\r\n  const restaurant = useSelector(selectRestaurant)\r\n  const items = useSelector(selectBasketItems)\r\n  const basketTotal = useSelector(selectBasketTotal)\r\n  const dispatch = useDispatch()\r\n\r\n  // if(items.length == 0){navigation.navigate(\"Home\")}\r\n\r\n  useEffect(() => {\r\n    const groupedItems = items.reduce((results, item) => {\r\n        (results[item.id] = results[item.id] || []).push(item)\r\n        return results\r\n    }, {})\r\n\r\n    setGroupedItemsInBasket(groupedItems)\r\n  }, [items])\r\n\r\n//   console.log(groupedItemsInBasket)  \r\n  \r\n  return (\r\n    <SafeAreaView className=\"flex-1 bg-white\">\r\n      <View className=\"flex-1 bg-gray-100\">\r\n        <View className=\"p-5 border-b border-[#00CCBB] bg-white shadow-x\">\r\n            <View>\r\n                <Text className=\"text-lg font-bold text-center\">Basket</Text>\r\n                <Text className=\"text-center text-gray-400\">\r\n                    {restaurant.title}\r\n                </Text>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n                onPress={navigation.goBack}\r\n                className=\"rounded-full bg-gray-100 absolute top-3 right-5\"\r\n            >\r\n                <XCircleIcon color='#00CCBB' height={50} width={50} />\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className=\"flex-row items-center space-x-4 px-4 py-3 bg-white my-5\">\r\n          <Image\r\n            source={{\r\n              uri: \"https://links.papareact.com/wru\",\r\n            }}\r\n            className=\"h-7 w-7 bg-gray-300 p-4 rounded-full\"\r\n          />\r\n          <Text className=\"flex-1\">Deliver in 30-50 min</Text>\r\n          <TouchableOpacity>\r\n            <Text className=\"text-[#00CCBB]\">Change</Text>  \r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n        <ScrollView className=\"divide-y divide-gray-200\">\r\n          {Object.entries(groupedItemsInBasket).map(([key, items]) => (\r\n            <View \r\n              key={key} \r\n              className=\"flex-row items-center space-x-3 bg-white py-2 px-5\"\r\n            >\r\n              <Text className=\"text-[#00CCBB]\">{items.length} x</Text>\r\n              <Image\r\n                source={{ uri: urlFor(items[0]?.image).url() }}\r\n                className=\"h-12 w-12 rounded-full\"\r\n              />\r\n              <Text className=\"flex-1\">{items[0]?.name}</Text>\r\n\r\n              <Text className=\"text-gray-600\">\r\n                <Currency quantity={items[0]?.price} currency=\"GBP\" />\r\n              </Text>\r\n              \r\n              <TouchableOpacity>\r\n                <Text\r\n                  className=\"text-[#00CCBB] text-xs\"\r\n                  onPress={() => dispatch(removeFromBasket({ id: key }))}\r\n                >\r\n                  Remove\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <View className=\"p-5 bg-white mt-5 space-y-4\">\r\n        \r\n          <View className=\"flex-row justify-between\">\r\n            <Text className=\"text-gray-400\">Subtotal</Text>\r\n            <Text className=\"text-gray-400\">\r\n            <Currency quantity={basketTotal} currency=\"GBP\" />\r\n            </Text>\r\n          </View>\r\n\r\n          <View className=\"flex-row justify-between\">\r\n            <Text className=\"text-gray-400\">Delivery Fee</Text>\r\n            <Text className=\"text-gray-400\">\r\n            <Currency quantity={5.99} currency=\"GBP\" />\r\n            </Text>\r\n          </View>\r\n\r\n          <View className=\"flex-row justify-between\">\r\n            <Text>Order Total</Text>\r\n            <Text className=\"font-extrabold\">\r\n            <Currency quantity={basketTotal + 5.99} currency=\"GBP\" />\r\n            </Text>\r\n          </View>\r\n        \r\n          <TouchableOpacity\r\n            disabled={!items.length}\r\n            onPress={() => navigation.navigate(\"PreparingOrderScreen\")} \r\n            className=\"rounded-lg bg-[#00CCBB] p-4\"\r\n          >\r\n            <Text className=\"text-center text-white text-lg font-bold\">\r\n              Place Order\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n       </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default BasketScreen","import { View, Text, SafeAreaView } from 'react-native'\r\nimport React, { useEffect } from 'react'\r\nimport * as Animatable from \"react-native-animatable\"\r\nimport * as Progress from \"react-native-progress\"\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\nconst PreparingOrderScreen = () => {\r\n    const navigation = useNavigation()\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            navigation.navigate(\"Delivery\")\r\n        }, 3000)\r\n    }, [])\r\n\r\n  return (\r\n    <SafeAreaView className=\"bg-[#00CCBB] flex-1 justify-center items-center\">\r\n        <Animatable.Image\r\n            source={require(\"../assets/orderLoading.gif\")}\r\n            animation=\"slideInUp\"\r\n            iterationCount={1}\r\n            className=\"h-96 w-96\"\r\n        />\r\n    \r\n        <Animatable.Text\r\n            animation=\"slideInUp\"\r\n            iterationCount={1}\r\n            className=\"text-lg my-10 text-white font-bold text-center\"\r\n        >\r\n            Waiting for Restaurant to accept your order\r\n        </Animatable.Text>\r\n\r\n        <Progress.Circle size={60} indeterminate={true} color=\"white\" />\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default PreparingOrderScreen","import { View, Text, SafeAreaView, TouchableOpacity, Image, Dimensions } from 'react-native'\r\nimport React, { useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports'\r\nimport { selectRestaurant } from \"../features/restaurantSlice\"\r\nimport { XIcon } from \"react-native-heroicons/solid\"\r\nimport * as Progress from \"react-native-progress\"\r\n// import MapView, { Marker } from \"react-native-maps\"\r\nimport { clearBasket, selectBasketItems } from '../features/basketSlice'\r\n\r\nconst DeliveryScreen = () => {\r\n  const navigation = useNavigation()\r\n  const restaurant = useSelector(selectRestaurant)\r\n  const items = useSelector(selectBasketItems)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <View className=\"bg-[#00CCBB] flex-1\">\r\n      <SafeAreaView className=\"z-50\">\r\n        <View className=\"flex-row justify-between items-center p-3\">\r\n            <TouchableOpacity onPress={() => {\r\n              dispatch(clearBasket(items))\r\n              navigation.navigate(\"Home\")\r\n              \r\n            }}>\r\n                <XIcon color=\"white\" size={30} />\r\n            </TouchableOpacity>\r\n            <Text className=\"font-light text-white text-lg\">Order Help</Text>\r\n        </View>\r\n\r\n        <View className=\"bg-white mx-5 my-2 rounded-md p-6 z-50 shadow-md\">\r\n            <View className=\"flex-row justify-between\">\r\n                <View>\r\n                    <Text className=\"text-lg text-gray-400\">Estimated Arrival Time</Text>\r\n                    <Text className=\"text-4xl font-bold\">30-50 Minutes</Text>\r\n                </View>\r\n                <Image\r\n                    source={require(\"../assets/bike.gif\")}\r\n                    className=\"h-20 w-20\"\r\n                />\r\n            </View>\r\n\r\n            <Progress.Bar size={30} color=\"#00CCBB\" indeterminate={true} />\r\n\r\n            <Text className=\"mt-3 text-gray-500\">\r\n                Your order at {restaurant.title} is being prepared\r\n            </Text>\r\n        </View>\r\n      </SafeAreaView>\r\n      \r\n      <SafeAreaView className=\"flex-1\">\r\n        <Text className=\"flex-1 flex items-center justify-center text-white text-lg\">MAP HERE</Text>\r\n      </SafeAreaView>\r\n\r\n      {/* <MapView\r\n        initialRegion={{\r\n          latitude: restaurant.lat,\r\n          longitude: restaurant.long,\r\n          latitudeDelta: 0.005,\r\n          longitudeDelta: 0.005,\r\n        }}\r\n        className=\"flex-1 -mt-10 z-0\"\r\n        mapType='mutedStandard'\r\n      >\r\n        <Marker\r\n          coordinate={{\r\n            latitude: restaurant.lat,\r\n            longitude: restaurant.long,\r\n          }}\r\n          title={restaurant.title}\r\n          description={restaurant.short_description}\r\n          identifier='origin'\r\n          pinColor='#00CCBB'\r\n        />\r\n      </MapView> */}\r\n\r\n      <SafeAreaView className=\"bg-white flex-row items-center space-x-5 h-28\">\r\n        <Image\r\n          source={{\r\n            uri: \"https://links.papareact.com/wru\"\r\n          }}\r\n          className=\"h-12 w-12 bg-gray-300 p-4 rounded-full ml-5\"\r\n        />\r\n        <View>\r\n          <Text className=\"text-lg\">CoderJoe</Text>\r\n          <Text className=\"text-gray-400\">Your Rider</Text>\r\n        </View>\r\n\r\n        <Text className=\"text-[#00CCBB] text-lg mr-5 font-bold\">Call</Text>\r\n      </SafeAreaView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default DeliveryScreen","import { NavigationContainer } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { TailwindProvider } from 'tailwindcss-react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport RestaurantScreen from './screens/RestaurantScreen';\r\nimport { store } from './store'\r\nimport { Provider } from 'react-redux'\r\nimport BasketScreen from './screens/BasketScreen';\r\nimport PreparingOrderScreen from './screens/PreparingOrderScreen';\r\nimport DeliveryScreen from './screens/DeliveryScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Provider store={store}>\r\n        <TailwindProvider>\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n            <Stack.Screen name=\"Restaurant\" component={RestaurantScreen} />\r\n            <Stack.Screen name=\"Basket\" component={BasketScreen}\r\n              options={{ presentation: \"modal\", headerShown: false }}\r\n            />\r\n            <Stack.Screen name=\"PreparingOrderScreen\" component={PreparingOrderScreen}\r\n              options={{ presentation: \"fullScreenModal\", headerShown: false }}\r\n            />\r\n            <Stack.Screen name=\"Delivery\" component={DeliveryScreen}\r\n              options={{ presentation: \"fullScreenModal\", headerShown: false }}\r\n            />\r\n          </Stack.Navigator>\r\n        </TailwindProvider>\r\n      </Provider>\r\n    </NavigationContainer>\r\n  );\r\n}","module.exports = __webpack_public_path__ + \"static/media/orderLoading.2456f4ab.gif\";","module.exports = __webpack_public_path__ + \"static/media/bike.8d5127d2.gif\";"],"sourceRoot":""}